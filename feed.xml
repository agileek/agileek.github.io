<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Agile &amp; Java</title>
    <description>Another blog on agile and java. Maybe i&#39;ll add kittens and food recipe if my partner helps me.</description>
    <link>http://agileek.github.io/</link>
    <atom:link href="http://agileek.github.io/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 03 Apr 2015 18:44:03 +0000</pubDate>
    <lastBuildDate>Fri, 03 Apr 2015 18:44:03 +0000</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Maven 3.3.1: La mort du pom.xml</title>
        <description>&lt;p&gt;&lt;img src=&quot;/images/posts/maven/maven_logo.png&quot; alt=&quot;Maven&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;maven&quot;&gt;Maven&lt;/h2&gt;

&lt;p&gt;Haaaa, maven, le seul, l’unique. On l’a tous détesté pour plein de raisons, que ce soit :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;son fonctionnement ‘convention over configuration’&lt;/li&gt;
  &lt;li&gt;sa lenteur&lt;/li&gt;
  &lt;li&gt;sa capacité à télécharger la terre entière&lt;/li&gt;
  &lt;li&gt;son cycle de vie limité.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sans oublier sa syntaxe ultra verbeuse en &lt;strong&gt;&lt;em&gt;XML&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;le-constat&quot;&gt;Le constat&lt;/h3&gt;

&lt;p&gt;Petit rappel qui pique les yeux : voici comment déclarer &lt;strong&gt;&lt;em&gt;UNE&lt;/em&gt;&lt;/strong&gt; dépendance dans son pom :&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;net.code-story&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;http&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.83&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;test&lt;span class=&quot;nt&quot;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ça fait quand même &lt;strong&gt;&lt;em&gt;6&lt;/em&gt;&lt;/strong&gt; lignes pour &lt;strong&gt;&lt;em&gt;1&lt;/em&gt;&lt;/strong&gt; dépendance, soyons réalistes, c’est juste ignoble…&lt;/p&gt;

&lt;h3 id=&quot;polyglot&quot;&gt;Polyglot&lt;/h3&gt;
&lt;p&gt;Annoncé il y’a très longtemps (j’en ai entendu parler en 2012, il y avait quelques articles prometteurs), maven-polyglot avait pour but de rajouter le support de plusieurs langages dans les pom. Ça a été complètement abandonné et toutes les resources ont &lt;a href=&quot;http://stackoverflow.com/questions/11170057/what-happened-to-maven-polyglot&quot;&gt;disparues du net&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;C’est récemment revenu au goût du jour avec Maven 3.3.1 (17 mars 2015) et l’arrivée du “Core Extension Mechanism” amélioré. Maintenant, pour modifier le coeur de maven (ok, je simplifie), il “suffit” de rajouter à la base de son projet maven &lt;code&gt;.mvn/extensions.xml&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;concrtement-a-ressemble--quoi&quot;&gt;Concrètement, ça ressemble à quoi?&lt;/h3&gt;

&lt;p&gt;À ça :&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;extensions&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;extension&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.takari.polyglot&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;polyglot-yaml&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.1.7&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/extension&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/extensions&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Vous remarquerez que pour le moment on s’est pas trop débarrassé du XML, on en a même rajouté…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;il-sest-pass-quoi&quot;&gt;Il s’est passé quoi?&lt;/h3&gt;
&lt;p&gt;Concrètement, vous venez de rajouter le support de lecture des pom.yml et pom.yaml. &lt;strong&gt;&lt;em&gt;C’est pas énorme ça?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ensuite, Vous pouvez convertir votre &lt;code&gt;pom.xml&lt;/code&gt; grâce à un plugin via cette commande :&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;mvn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;takari&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;polyglot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;polyglot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;translate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;plugin:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;translate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dinput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;xml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Doutput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;yml&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Et voilà, vous pouvez vous débarrasser du pom.xml et lancer &lt;code&gt;mvn clean install&lt;/code&gt;. Vérifier que tout fonctionne comme avant quand même, on ne sait jamais.&lt;/p&gt;

&lt;p&gt;Pour le plaisir des yeux, voici la même dépendance en yaml&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p-Indicator&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;groupId&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;net.code-story&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;artifactId&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;2.9.1&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Je trouve ça infiniment plus lisible. (Ok, c’est one-line, mais franchement, c’est lisible, essayez de mettre le xml sur une ligne, pour la blague)&lt;/p&gt;

&lt;h3 id=&quot;cest-tout-cest-bon-on-peut-supprimer-nos-pomxml&quot;&gt;C’est tout? C’est bon on peut supprimer nos pom.xml?&lt;/h3&gt;

&lt;p&gt;Malheureusement non, car si maven s’en sort très bien, ce n’est pas le cas (encore) des IDE.&lt;/p&gt;

&lt;p&gt;Donc pour le moment si vous tenez absolument à vous débarrasser des pom.xml, vous pouvez faire en sorte de transformer votre pom.yml en pom.xml avec le même plugin. Ça duplique les fichiers, c’est moche, mais ça fonctionne.&lt;/p&gt;

&lt;p&gt;Si vous êtes un peu patient, vous pouvez attendre que votre IDE favori implémente le support du polyglot en natif.&lt;/p&gt;

&lt;h4 id=&quot;intellij&quot;&gt;Intellij&lt;/h4&gt;
&lt;p&gt;Pour avoir le support sous IntelliJ, n’hésitez pas à allez voter là : &lt;a href=&quot;https://youtrack.jetbrains.com/issue/IDEA-138776&quot;&gt;IDEA-138776&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;ps&quot;&gt;PS&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Je vous ai parlé que de yaml, mais il existe déjà plein d’autres langages
    &lt;ul&gt;
      &lt;li&gt;atom&lt;/li&gt;
      &lt;li&gt;groovy&lt;/li&gt;
      &lt;li&gt;ruby&lt;/li&gt;
      &lt;li&gt;scala&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;En ruby par exemple il y’a la possibilité d’appeler du code ruby directement dans le pom.rb. Je trouve ça vraiment pas propre, à voir à l’usage.&lt;/li&gt;
  &lt;li&gt;N’hésitez pas à aller voir les &lt;a href=&quot;https://github.com/takari/polyglot-maven-examples&quot;&gt;différents exemples&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Un de nos pom faisait 205 lignes, il en fait maintenant 74, en étant plus lisible&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;C’est mon opinion personnelle à moi, vous avez le droit de préférer le xml &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Fri, 03 Apr 2015 00:00:00 +0000</pubDate>
        <link>http://agileek.github.io/java/2015/04/03/maven-polyglot/</link>
        <guid isPermaLink="true">http://agileek.github.io/java/2015/04/03/maven-polyglot/</guid>
        
        
        <category>java</category>
        
      </item>
    
      <item>
        <title>Jekyll : ajouter des catégories à vos menus</title>
        <description>&lt;h2 id=&quot;jekyll&quot;&gt;Jekyll&lt;/h2&gt;

&lt;p&gt;Comme il y’a &lt;strong&gt;&lt;em&gt;énormément&lt;/em&gt;&lt;/strong&gt; de posts sur ce blog, j’ai eu envie de pouvoir lister les posts par catégories.&lt;/p&gt;

&lt;p&gt;Je me suis dis que c’était relativement facile, et au final j’y ai passé un moment avant de réussir à le faire fonctionner complètement avec githup pages.&lt;/p&gt;

&lt;p&gt;J’ai trouvé des resources un peu partout mais rien qui expliquait de bout en bout la manipulation, d’où le post.&lt;/p&gt;

&lt;h3 id=&quot;le-gnrateur&quot;&gt;Le générateur&lt;/h3&gt;

&lt;p&gt;Jekyll sert statiquement les pages, il n’y a donc pas la possibilité de récupérer les paramètres de l’url pour s’en servir.&lt;/p&gt;

&lt;p&gt;Par exemple, j’aurais aimé que &lt;code&gt;http://agileek.github.io/?category=docker&lt;/code&gt; fonctionne.&lt;/p&gt;

&lt;p&gt;Ce n’est pas possible de le faire autrement que par javascript (ce qui implique de charger tous les posts côté client), ce que je ne trouve pas optimal.&lt;/p&gt;

&lt;p&gt;Si vous voulez le faire, jetez un oeil au &lt;a href=&quot;https://github.com/danielsiwiec/danielsiwiec.github.io/commit/cf04dd322f5ffe2251ca6e3733d2707c2eaec7d4&quot;&gt;commit&lt;/a&gt; de &lt;a href=&quot;https://github.com/danielsiwiec/&quot;&gt;@danielsiwiec&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;ct-serveur&quot;&gt;Côté serveur&lt;/h4&gt;

&lt;p&gt;Je me suis attaqué aux plugins de jekyll, plus précisément aux &lt;a href=&quot;http://jekyllrb.com/docs/plugins/#generators&quot;&gt;generators&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Je n’ai rien touché au code du générateur de catégories qui est dans la doc de jekyll:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Jekyll&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CategoryPage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Page&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;category&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@site&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@base&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@dir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dir&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;index.html&amp;#39;&lt;/span&gt;

      &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_yaml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;_layouts&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;category_index.html&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;category&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;category&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;category_title_prefix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;category_title_prefix&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Category: &amp;#39;&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;category_title_prefix&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;category&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CategoryPageGenerator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Generator&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;safe&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;generate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layouts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;category_index&amp;#39;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;dir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;category_dir&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;categories&amp;#39;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;categories&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each_key&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;category&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pages&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CategoryPage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;category&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;category&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Par contre ce qu’ils n’expliquent pas (ou pas bien), c’est qu’il faut un fichier de template pour pouvoir générer toutes les pages de catégories.&lt;/p&gt;

&lt;p&gt;Voici le &lt;a href=&quot;https://github.com/agileek/agileek.github.io/commit/14d1c8ffb3863fd5746cb28daefa5aee3f1bf99f&quot;&gt;commit&lt;/a&gt;, qui contient également la partie template web (le &lt;code&gt;category_index.html&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Et voilà, ça fonctionne parfaitement sur &lt;strong&gt;&lt;em&gt;mon poste&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;et-docker-dans-tout-a&quot;&gt;Et docker dans tout ça&lt;/h3&gt;

&lt;p&gt;Vous l’avez peut-être remarqué, mais il y’a le tag docker sur ce post, si vous vous demandez pourquoi, voilà la raison :&lt;/p&gt;

&lt;p&gt;Github ne permet pas d’exécuter les plugins jekyll (il le lance avec &lt;code&gt;--safe&lt;/code&gt;) donc ce qui fonctionnait &lt;strong&gt;&lt;em&gt;sur mon poste&lt;/em&gt;&lt;/strong&gt; ne fonctionnait pas en ligne.&lt;/p&gt;

&lt;p&gt;Il me faut donc générer statiquement le blog et le commiter sur master “à la mano”.&lt;/p&gt;

&lt;p&gt;Comme je me sers déjà de docker pour &lt;a href=&quot;http://agileek.github.io/docker/jekyll/2014/07/23/jekyll-and-docker/&quot;&gt;tester mon site&lt;/a&gt;, autant m’en servir pour le builder.&lt;/p&gt;

&lt;p&gt;Je me suis inspiré de &lt;a href=&quot;http://nicoespeon.com/en/2013/04/building-a-multinlingual-jekyll-blog/&quot;&gt;cet article&lt;/a&gt;, surtout de son &lt;a href=&quot;https://github.com/nicoespeon/nicoespeon.github.io/blob/develop/Makefile&quot;&gt;makefile&lt;/a&gt;, pour faire le &lt;a href=&quot;https://github.com/agileek/agileek.github.io/blob/develop/Makefile&quot;&gt;mien&lt;/a&gt; :&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-make&quot; data-lang=&quot;make&quot;&gt;&lt;span class=&quot;nv&quot;&gt;JEKYLL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; docker run --rm -v &lt;span class=&quot;s2&quot;&gt;&amp;quot;$(shell pwd):/src&amp;quot;&lt;/span&gt; -p 4000:4000 grahamc/jekyll
&lt;span class=&quot;nv&quot;&gt;RUNNER&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;whoami&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;COMMIT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;git rev-parse --short HEAD&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
  @&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JEKYLL&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; serve --watch -H 0.0.0.0 --drafts

&lt;span class=&quot;nf&quot;&gt;deploy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
  @echo &lt;span class=&quot;s2&quot;&gt;&amp;quot;Building site&amp;quot;&lt;/span&gt;
  @&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JEKYLL&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; build
  @git checkout master
  @sudo chown -R &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;RUNNER&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;. _site &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo cp -r _site/* . &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo rm -rf _*/
  @git add --all . &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git commit -m &lt;span class=&quot;s2&quot;&gt;&amp;quot;Jekyll deployment from commit ${COMMIT}&amp;quot;&lt;/span&gt;
  @git checkout develop &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo git clean -f -d
  @echo &lt;span class=&quot;s2&quot;&gt;&amp;quot;You can now push master&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Maintenant, je n’ai même plus besoin de me souvenir de la commande jekyll à taper, un simple &lt;code&gt;make test&lt;/code&gt; suffit.&lt;/p&gt;

&lt;p&gt;Quand je suis satisfait du résultat, un &lt;code&gt;make deploy&lt;/code&gt; suivi d’un &lt;code&gt;git push&lt;/code&gt; de &lt;code&gt;master&lt;/code&gt; et c’est en ligne.&lt;/p&gt;

&lt;p&gt;Du coup je me suis amusé à rajouter un &lt;a href=&quot;http://agileek.github.io/archives/index.html&quot;&gt;generateur d’archives&lt;/a&gt; qui me classe les articles par années. Inutile, donc indispensable. Si ça vous intéresse, le commit est &lt;a href=&quot;https://github.com/agileek/agileek.github.io/commit/5f60f98cac273ee53dc4b458a06ba9e668f054b7&quot;&gt;là&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;edit-2015-04-03&quot;&gt;Edit 2015-04-03&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Jean-Philippe m’a expliqué qu’il n’y avait pas besoin de générateur pour les archives, ce qui est beaucoup plus simple et plus propre.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Voici la &lt;a href=&quot;https://github.com/barreverte/barreverte.github.io/blob/master/archive.html&quot;&gt;page en question&lt;/a&gt;. Je vous conseille de faire un tour sur leur &lt;a href=&quot;http://www.barreverte.fr/&quot;&gt;blog&lt;/a&gt;, c’est fait par des anciens collègues que j’apprécie énormément.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;rsultat&quot;&gt;Résultat&lt;/h2&gt;

&lt;p&gt;Maintenant, les images à droites des posts sur la page principale sont cliquables!!!!&lt;/p&gt;

&lt;p&gt;C’est pas magnifique ça? Non? Mince alors.&lt;/p&gt;

&lt;h4 id=&quot;ps-&quot;&gt;PS :&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Petit précision, ça peut fonctionner avec les ‘tags’ bien sûr&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 02 Apr 2015 00:00:00 +0000</pubDate>
        <link>http://agileek.github.io/docker/jekyll/2015/04/02/jekyll-generator-with-github/</link>
        <guid isPermaLink="true">http://agileek.github.io/docker/jekyll/2015/04/02/jekyll-generator-with-github/</guid>
        
        
        <category>docker</category>
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>One day, one post, one month</title>
        <description>&lt;h2 id=&quot;challenge-du-mois&quot;&gt;Challenge du mois&lt;/h2&gt;

&lt;p&gt;J’ai commencé ce blog en Juillet 2014 avec plein d’idées, de sujets, de bonnes résolutions.&lt;/p&gt;

&lt;p&gt;Résultat, 9 mois plus tard, 3 billets en ligne… c’est pas fameux comme bilan.&lt;/p&gt;

&lt;p&gt;Je me suis rendu compte que c’était difficile de blogger pour plein de raisons:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;On trouve toujours autre chose à faire, même si on a des sujets plein la tête.&lt;/li&gt;
  &lt;li&gt;Ça prend du temps, même pour des sujets qu’on maitrise&lt;/li&gt;
  &lt;li&gt;En tant que freelance qui télétravaille, c’est difficile de se détacher de son client pour prendre du temps “pour soi”&lt;/li&gt;
  &lt;li&gt;Je suis un peu fainéant je pense&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;J’étais en train de me poser la question de garder mon blog ou pas, car un blog abandonné, c’est quand même triste.&lt;/p&gt;

&lt;p&gt;Je n’ai donc pas hésité longtemps quand Vincent m’a proposé un petit challenge : écrire un billet par jour pendant 1 mois.&lt;/p&gt;

&lt;p&gt;Nous avons discuté lors du dernier &lt;a href=&quot;http://www.toulousejug.org/2015/03/11/yeoman.html&quot;&gt;Toulouse Jug&lt;/a&gt;, et c’est là qu’il m’a parlé de ce défi qu’il s’était lancé avec un ami.&lt;/p&gt;

&lt;p&gt;J’ai trouvé l’idée vraiment super…le principe derrière l’idée encore plus :&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Le but est de se lancer des défis sur 30 jours pour bousculer les habitudes&lt;/em&gt;&lt;/strong&gt;. Vincent l’explique mieux que moi dans son &lt;a href=&quot;http://vferries.github.io/blog/ignite-talks/&quot;&gt;post du premier avril&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Donc voilà, c’est parti pour un mois de posts, je pense parler de docker, j’ai quelques sujets assez précis dont je voudrais parler, mais pas que.&lt;/p&gt;

&lt;h2 id=&quot;les-challengers&quot;&gt;Les challengers&lt;/h2&gt;

&lt;div class=&quot;video-container&quot;&gt;
  &lt;iframe src=&quot;https://www.youtube.com/embed/TTdm5GtAW0o&quot; frameborder=&quot;0&quot; width=&quot;800&quot; height=&quot;600&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h3 id=&quot;vincent-ferries&quot;&gt;Vincent Ferries&lt;/h3&gt;
&lt;p&gt;Je le croise à tous les événements auxquels je vais, c’est impressionnant il est partout, passionné par le dev, il lance son &lt;a href=&quot;http://vferries.github.io/blog/&quot;&gt;blog&lt;/a&gt; et il en a un deuxième exclusivement sur les &lt;a href=&quot;http://vferries.github.io/voyage/&quot;&gt;voyages&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Je vous conseille d’aller y faire un tour, ça fait rêver.&lt;/p&gt;

&lt;h3 id=&quot;jean-marie&quot;&gt;Jean-Marie&lt;/h3&gt;
&lt;p&gt;Je ne le connais pas personnellement, je fais confiance à Vincent quand il me dit qu’il va parler de JavaScript et de vim.&lt;/p&gt;

&lt;p&gt;Son blog est &lt;a href=&quot;http://randomblog.fr/&quot;&gt;ici&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;ps-&quot;&gt;PS :&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Et ce n’est pas un poisson d’avril&lt;/li&gt;
  &lt;li&gt;J’avais adoré l’initiative similaire de &lt;a href=&quot;http://blog.javabien.net/2014/03/28/one-day-one-post-6-weeks-30-posts/&quot;&gt;David Gageot&lt;/a&gt;, dommage qu’il ait arrêté&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 01 Apr 2015 00:00:00 +0000</pubDate>
        <link>http://agileek.github.io/2015/04/01/one-day-one-post/</link>
        <guid isPermaLink="true">http://agileek.github.io/2015/04/01/one-day-one-post/</guid>
        
        
      </item>
    
      <item>
        <title>Generate log line with Intellij and live templates</title>
        <description>&lt;p&gt;With IntelliJ, one missing feature is the automatic generation of the famous &lt;code&gt;private static Logger LOGGER = ...;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can do it easily with the Live Templates, you just have to go to &lt;strong&gt;&lt;em&gt;Editor -&amp;gt; Live Templates -&amp;gt; others -&amp;gt; create new&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;And in these fields :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Abbreviation: log&lt;/li&gt;
  &lt;li&gt;Description: Add log line&lt;/li&gt;
  &lt;li&gt;Template text:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;slf4j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Logger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOGGER&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;slf4j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LoggerFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;$CLASS_NAME$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Applicable in: Java: declaration&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Edit variables: CLASS_NAME Expresion: className()&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Make sure you have slf4j-api in your classpath, with maven:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.slf4j&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;slf4j-api&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.7.7&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That’s it, type &lt;code&gt;log&lt;/code&gt; and Ctrl+J and it will generate the logger line, with the slf4j imports.&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Mar 2015 00:00:00 +0000</pubDate>
        <link>http://agileek.github.io/intellij/java/2015/03/01/intellij-live-template-log/</link>
        <guid isPermaLink="true">http://agileek.github.io/intellij/java/2015/03/01/intellij-live-template-log/</guid>
        
        
        <category>intellij</category>
        
        <category>java</category>
        
      </item>
    
      <item>
        <title>Playing with docker and cpuset</title>
        <description>&lt;p&gt;For my client I need to benchmark a multi-threaded/multi-server solution.&lt;/p&gt;

&lt;p&gt;Unfortunately, we only have a big server (128 GB, 32 cores,…) and we are putting all our instances on this single server.
As each instance is multi-threaded, we noticed that they often get in each others way, resulting in bad performances (context swapping, …).&lt;/p&gt;

&lt;p&gt;We solved this problem with 2 solutions.&lt;/p&gt;

&lt;p&gt;We used thread affinity in the application in order to bind some thread to a given CPU, and we used &lt;a href=&quot;https://www.docker.com/&quot;&gt;docker&lt;/a&gt; to authorize a given application to access only some CPUs (via cpuset).&lt;/p&gt;

&lt;p&gt;In order to be sure that docker was correctly restricting the access to the CPUs, I created a &lt;a href=&quot;https://registry.hub.docker.com/u/agileek/cpuset-test/&quot;&gt;docker image&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;If you run it with&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker run -ti --cpuset&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;6&lt;/span&gt; agileek/cpuset-test&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;it will take one cpu (the 7th) at 100%.&lt;/p&gt;

&lt;p&gt;You can see it in action:&lt;/p&gt;

&lt;div class=&quot;video-container&quot;&gt;
  &lt;iframe src=&quot;http://www.youtube.com/embed/1BMKK812y5A&quot; frameborder=&quot;0&quot; width=&quot;800&quot; height=&quot;600&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;If you run it with&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker run -ti --cpuset&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0,4,6 agileek/cpuset-test /cpus 3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;it will take all available CPUs (the 1st, 5th and 7th)&lt;/p&gt;

&lt;p&gt;You can see it in action:&lt;/p&gt;

&lt;div class=&quot;video-container&quot;&gt;
  &lt;iframe src=&quot;http://www.youtube.com/embed/ITcyeL8V35I&quot; frameborder=&quot;0&quot; width=&quot;800&quot; height=&quot;600&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

</description>
        <pubDate>Wed, 06 Aug 2014 23:26:31 +0000</pubDate>
        <link>http://agileek.github.io/docker/2014/08/06/docker-cpuset/</link>
        <guid isPermaLink="true">http://agileek.github.io/docker/2014/08/06/docker-cpuset/</guid>
        
        
        <category>docker</category>
        
      </item>
    
      <item>
        <title>Jekyll quickstart with docker</title>
        <description>&lt;p&gt;&lt;img src=&quot;/images/posts/2014-07-23/jekyll.png&quot; alt=&quot;Jekyll&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is my first blog post!&lt;/p&gt;

&lt;p&gt;It’s been quite some time that I wanted to start it but I never had the energy to do it.&lt;/p&gt;

&lt;p&gt;After a quick search on blog engines, I decided to give a try to &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt;, since it is integrated with github pages and is very simple to use.
I followed their tutorial and Bam!&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo gem install jekyll
Building native extensions.  This could take a &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;...
ERROR:  Error installing jekyll:
	ERROR: Failed to build gem native extension.

        /usr/bin/ruby1.9.1 extconf.rb
/usr/lib/ruby/1.9.1/rubygems/custom_require.rb:36:in &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;require&lt;span class=&quot;s1&quot;&gt;&amp;#39;: cannot load such file -- mkmf (LoadError)&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;	from /usr/lib/ruby/1.9.1/rubygems/custom_require.rb:36:in `require&amp;#39;&lt;/span&gt;
	from extconf.rb:1:in &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&amp;lt;main&amp;gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;


Gem files will remain installed in /var/lib/gems/1.9.1/gems/fast-stemmer-1.0.2 &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; inspection.
Results logged to /var/lib/gems/1.9.1/gems/fast-stemmer-1.0.2/ext/gem_make.out&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It didn’t work on my computer… and since i’m a lazy person, I get tired really fast when things don’t work like expected.&lt;/p&gt;

&lt;p&gt;On the other side I’m a huge &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt; fan, so I looked for a dockerized jekyll and I found this one: &lt;a href=&quot;https://registry.hub.docker.com/u/grahamc/jekyll/&quot;&gt;Jekyll with docker&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In 3 steps, this blog was on:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Added alias to use &amp;#39;jekyll&amp;#39; command easily&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;jekyll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;#39;&lt;/span&gt;sudo docker run --rm -v &lt;span class=&quot;se&quot;&gt;\&amp;quot;\$&lt;/span&gt;PWD:/src&lt;span class=&quot;se&quot;&gt;\&amp;quot;&lt;/span&gt; -p 4000:4000 grahamc/jekyll&lt;span class=&quot;se&quot;&gt;\&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bash_aliases
&lt;span class=&quot;c&quot;&gt;# Create a blog in &amp;#39;blog&amp;#39; directory&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jekyll new blog
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;blog
&lt;span class=&quot;c&quot;&gt;# Serve the blog on http://localhost:4000 and automatically reload on file changes&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jekyll serve --watch&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This was painless for me, as someone else already had a jekyll correctly installed and working in a docker environment.&lt;/p&gt;

&lt;p&gt;Thanks &lt;a href=&quot;http://grahamc.com/&quot;&gt;Graham Christensen&lt;/a&gt;!&lt;/p&gt;

</description>
        <pubDate>Wed, 23 Jul 2014 15:22:45 +0000</pubDate>
        <link>http://agileek.github.io/docker/jekyll/2014/07/23/jekyll-and-docker/</link>
        <guid isPermaLink="true">http://agileek.github.io/docker/jekyll/2014/07/23/jekyll-and-docker/</guid>
        
        
        <category>docker</category>
        
        <category>jekyll</category>
        
      </item>
    
  </channel>
</rss>
