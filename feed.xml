<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Agile &amp; Java</title>
        <description>Another blog on agile and java. Maybe i&#39;ll add kittens and food recipe if my partner helps me.</description>
        <link>http://agileek.github.io/</link>
        <atom:link href="http://agileek.github.io/feed.xml" rel="self" type="application/rss+xml" />
        <pubDate>Thu, 09 Apr 2015 14:26:23 +0000</pubDate>
        <lastBuildDate>Thu, 09 Apr 2015 14:26:23 +0000</lastBuildDate>
        <generator>Jekyll v2.5.3</generator>
        
        <item>
            <title>Devoxx France : jour 2</title>
            <description>&lt;p&gt;&lt;img src=&quot;/images/posts/devoxx/devoxx_france.png&quot; alt=&quot;Devoxx&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;keynotes&quot;&gt;Keynotes&lt;/h2&gt;

&lt;p&gt;Cette première session de keynotes va nous parler du futur de l’informatique.&lt;/p&gt;

&lt;h3 id=&quot;aldebaran&quot;&gt;Aldebaran&lt;/h3&gt;

&lt;p&gt;Le premier speaker nous parle de ce que sera la robotique dans le futur, au travers de sa société.&lt;/p&gt;

&lt;p&gt;Les premières applications seront probablement l’assistance aux personnes agées, ce qui ne sera pas disponible avant 5 ans, à cause des problématiques de reconnaissance vocale à distance.&lt;/p&gt;

&lt;p&gt;Pour lui, dans 20 ans les robots seront devenus des compagnons présents dans nos logements, nous assistant dans nos taches quotidiennes. Il seront en quelque sorte au coeur de la domotique.&lt;/p&gt;

&lt;p&gt;Petit point bluffant avec ces petits robots : ils sont capables de détecter les émotions (colère, tristesse) au travers des dialogues.&lt;/p&gt;

&lt;h4 id=&quot;quelle-responsabilit-pour-le-dveloppeur&quot;&gt;Quelle responsabilité pour le développeur&lt;/h4&gt;

&lt;p&gt;Le robot est un outil, il peut être bien ou mal utilisé.&lt;/p&gt;

&lt;p&gt;Le robot est une plateforme programmable par n’importe qui, intégrer les  lois de la robotique d’Asimov s’avère compliqué, et au final pas très efficace (Si on lit ses livres, on se rend compte qu’elles ne fonctionnent pas).&lt;/p&gt;

&lt;p&gt;Il existe un problème lié à la responsabilité du robot. Qui est responsable en cas d’accident? Le robot ? La société qui a crée le robot ? Le développeur ?&lt;/p&gt;

&lt;h3 id=&quot;la-problmatique-du-contrle-des-technologies-de-linformation&quot;&gt;La problématique du contrôle des technologies de l’information&lt;/h3&gt;

&lt;p&gt;Excellente proposition : après Devoxx4Kids, faire un Devoxx4HommesPolitiques.&lt;/p&gt;

&lt;p&gt;La problématique actuelle est la démocratisation des outils informatiques. Les premiers acteurs de l’informatique étaient des techos qui avaient un idéal, maintenant ce sont des gens qui ne maitrisent pas la technique et sont intéressés par le pouvoir.&lt;/p&gt;

&lt;p&gt;Cinq phases de contrôle :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Préhistoire&lt;/li&gt;
  &lt;li&gt;Phase de mutation&lt;/li&gt;
  &lt;li&gt;Phase de globalisation&lt;/li&gt;
  &lt;li&gt;Phase légale&lt;/li&gt;
  &lt;li&gt;Phase d’assimilation culturelle&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Qu’on me donne six lignes écrites de la main du plus honnête homme, j’y trouverai de quoi le faire pendre (Richelieu)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Le problème qui se pose derrière la surveillance globalisée qui se met en place, c’est que le citoyen n’est plus “présumé innocent”, mais “présumé coupable”, ce qui change les fondements de notre société.&lt;/p&gt;

&lt;p&gt;Le scénario de l’espoir :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Le respect de la vie privée redevient une priorité
    &lt;ul&gt;
      &lt;li&gt;Inscription dans la constitution&lt;/li&gt;
      &lt;li&gt;Renforcement du rôle du juge d’instruction&lt;/li&gt;
      &lt;li&gt;Création d’un comité d’éthique&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Nous redevenos des citoyens&lt;/li&gt;
  &lt;li&gt;Développement du marché de la confiance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En conclusion :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;L’espionnage des citoyens par leur propre état trahit la faiblesse et la peur de ces états&lt;/li&gt;
  &lt;li&gt;Le rôle fondamental des concepteurs et des developpeurs
    &lt;ul&gt;
      &lt;li&gt;Ce sont les gardiens de la technologie&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;La liberté sans libre arbitre n’existe pas et le libre arbitre sans le respect de notre vie privée n’existe pas&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;reading-and-writing-in-20-years&quot;&gt;Reading and writing in 20 years&lt;/h2&gt;

&lt;p&gt;Aujourd’hui, tout ce que nous écrivons a une durée de vie qui nous dépasse (on peut retrouver ses premiers email facilement), c’était quelque chose qui n’était pas possible avant, pas à cette échelle. Que se passera-t-il dans 20 ans ?&lt;/p&gt;

&lt;p&gt;Il nous parle beaucoup de la capacité qu’on a maintenant à écrire, à partager&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; de plus en plus facilement. Mais il nous parle également des freins que l’on peut rencontrer.&lt;/p&gt;

&lt;p&gt;Quelles sont les contraintes actuelles qui nous empêchent de publier ? Il prend pour exemple le PDF, en tant que technologie du passé qui s’accroche encore au support papier et qui nous impose des contraintes (Je possède un kindle, c’est tout simplement impossible de lire un PDF, ce n’est pas du tout adapté)&lt;/p&gt;

&lt;h2 id=&quot;quickies&quot;&gt;Quickies&lt;/h2&gt;
&lt;p&gt;Haa, les quickies, ou le gros dilemme du : je mange ou j’assiste à une conf ?&lt;/p&gt;

&lt;h3 id=&quot;avro--la-souplesse-du-json-les-performances-du-binaire&quot;&gt;Avro : la souplesse du Json, les performances du binaire&lt;/h3&gt;

&lt;p&gt;Outil de sérialisation, c’est à la base un sous projet d’hadoop.&lt;/p&gt;

&lt;p&gt;Il est utilisé dans hadoop pour stoquer des gros volumes de données dans des fichiers.&lt;/p&gt;

&lt;p&gt;L’idée derrière ce lightning talk c’est de montrer qu’il est possible d’utiliser Avro pour autre chose que du bigData. Tout transfert de données un peu important (Rest, …) peut être amélioré avec Avro. Il permet d’encoder nos données dans un format spécifique. IL permet en plus d’ajouter simplement des compresseurs afin d’optimiser les transferts.&lt;/p&gt;

&lt;p&gt;La killer feature : il est possible de spécifier un schéma d’écriture et un schéma de lecture, ce qui permet de pouvoir extraire que les données que l’on souhaite utiliser et ainsi gagner du temps et de la place. (Il y a une méthode qui permet de vérifier la compatibilité entre le writer et le reader)&lt;/p&gt;

&lt;p&gt;Les &lt;a href=&quot;https://github.com/alexvictoor/AvroDevoxxFr&quot;&gt;sources&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;changing-wheels-of-a-moving-car&quot;&gt;Changing wheels of a moving car&lt;/h2&gt;

&lt;p&gt;Présenté par Nicolas De Loof. Cet homme est fou :)&lt;/p&gt;

&lt;p&gt;Je préfère ne pas vous spoiler cette session, il faut la voir&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;. Il nous parle de son retour d’expérience sur cloudbees, notamment ses déboires/surprises avec le cloud amazon.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;Ce blog en est la preuve &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;Dès que le lien est sur Parleys, je linkerai la vidéo ici &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
            <pubDate>Thu, 09 Apr 2015 00:00:00 +0000</pubDate>
            <link>http://agileek.github.io/java/2015/04/09/devoxx-france-second-day/</link>
            <guid isPermaLink="true">http://agileek.github.io/java/2015/04/09/devoxx-france-second-day/</guid>
            
            
            <category>java</category>
            
        </item>
        
        <item>
            <title>Devoxx France : Jour 1</title>
            <description>&lt;h2 id=&quot;devoxx-france&quot;&gt;Devoxx France&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/devoxx/devoxx_france.png&quot; alt=&quot;Devoxx&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;google-cloud-platformhandsongcp&quot;&gt;09:30-12:30 &lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/GOB-3561/La_Google_Cloud_Plaform_-_Au_dela_des_simples_demos&quot;&gt;Google Cloud Platform&lt;/a&gt;&lt;/h2&gt;

&lt;h3 id=&quot;prsentation-de-google-cloud-platform-par-david-gageot-et-ludovic-champenois&quot;&gt;Présentation de Google Cloud Platform par David Gageot et Ludovic Champenois.&lt;/h3&gt;

&lt;p&gt;J’ai hésité avec “Quand Devops rencontre BigData”, mais il est trop tôt pour attaquer violemment avec du spark.&lt;/p&gt;

&lt;p&gt;Le but de cette session est de nous présenter une bonne partie de l’infrastructure google cloud au travers du déploiement d’une application de vote de tapis&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;Pas de slides pour cette session, tout est live.&lt;/p&gt;

&lt;p&gt;Énormément de produits sur https://could.google.com :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Compute
    &lt;ul&gt;
      &lt;li&gt;Compute Engine&lt;/li&gt;
      &lt;li&gt;App Engine&lt;/li&gt;
      &lt;li&gt;Container Engine&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Storage
    &lt;ul&gt;
      &lt;li&gt;SQL&lt;/li&gt;
      &lt;li&gt;Storage&lt;/li&gt;
      &lt;li&gt;Datastore&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Networking
    &lt;ul&gt;
      &lt;li&gt;Load Balancing&lt;/li&gt;
      &lt;li&gt;Interconnect&lt;/li&gt;
      &lt;li&gt;DNS&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Big Data
    &lt;ul&gt;
      &lt;li&gt;BigQuery&lt;/li&gt;
      &lt;li&gt;Dataflow&lt;/li&gt;
      &lt;li&gt;Pub/Sub&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Services
    &lt;ul&gt;
      &lt;li&gt;Translate API&lt;/li&gt;
      &lt;li&gt;Prediction API&lt;/li&gt;
      &lt;li&gt;Endpoints&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Management
    &lt;ul&gt;
      &lt;li&gt;Deployment Manager&lt;/li&gt;
      &lt;li&gt;Monitoring&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Petit fait intéressant, SnapChat tourne sur App Engine et ce sont les équipes de google qui s’occupent de la scalabitité de SnapChat.&lt;/p&gt;

&lt;p&gt;L’idée derrière le google cloud, c’est de pouvoir changer de stratégie (Je gère ma VM, ça monte en charge, je passe sur AppEngine) sans que ça soit coûteux.&lt;/p&gt;

&lt;h3 id=&quot;cot-dun-vm&quot;&gt;Coût d’un VM&lt;/h3&gt;

&lt;p&gt;Chaque VM est facturée à la minute de CPU (les 10 premières minutes sont indivisibles).&lt;/p&gt;

&lt;p&gt;À titre d’exemple, ils ont joué une semaine avec l’application de démo, ils ont fait des benchs (pour pousser le CPU) et ça leur a coûté 28$.&lt;/p&gt;

&lt;h3 id=&quot;dockerizer-la-dmo&quot;&gt;Dockerizer la démo&lt;/h3&gt;

&lt;p&gt;L’idée c’est que plutôt que de lancer une VM, de la configurer et d’installer son application, on crée une image docker qu’on va déployer sur le cloud.&lt;/p&gt;

&lt;p&gt;L’intérêt principal est de pouvoir tester son conteneur sur son infrastructure, puis de le déployer chez google.&lt;/p&gt;

&lt;p&gt;Avec Docker machine, il est possible de créer des VMs et de tout configurer directement dans le cloud google, c’est franchement impressionnant.&lt;/p&gt;

&lt;p&gt;Il est également possible de faire les mêmes commandes que sur sa machine, mais sur le cloud avec :&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;docker &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;docker-machine config mavmgoogle&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; ps&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;le “docker-machine config mavmgoogle” permet de récupérer toutes les options docker pour se connecter au docker de la vm.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Quelques petits soucis avec Docker et Google Cloud, il travaillent dessus.&lt;/p&gt;

&lt;h3 id=&quot;grpc&quot;&gt;GRPC&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://www.grpc.io&quot;&gt;Google RPC&lt;/a&gt;, nouveau service de google pour les messages entre machines.&lt;/p&gt;

&lt;p&gt;C’est un langage, le Protocol Buffer, qui génère des clients et des serveurs dans plein de technos différentes.&lt;/p&gt;

&lt;p&gt;Annoncé comme plus puissant que XML, plus léger que Json. Utilisé en interne chez google depuis 15 ans, il est open-sourcé depuis peu (0.0.4).&lt;/p&gt;

&lt;h3 id=&quot;app-engine&quot;&gt;App engine&lt;/h3&gt;

&lt;p&gt;Après avoir joué avec les VMs, puis docker, maintenant le déploiement se fait bien app-engine.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;AppEngine permet de faire tourner une collection de modules, avec plusieurs versions. Ça permet nativement le traffic splitting pour tester différentes versions en live.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Il a suffit d’un app.yaml à la racine pour décrire ce qui va se lancer. Il est possible de déclarer des règles (à la manière d’une conf nginx) pour déclarer les resources statiques et dynamiques, pour éviter de solliciter l’applicatif pour servir du contenu statique.&lt;/p&gt;

&lt;p&gt;Le déploiement docker sous app-engine crée automatiquement un registry privé, donc les images docker ne sont pas accessibles par les autres comptes.&lt;/p&gt;

&lt;h3 id=&quot;console&quot;&gt;Console&lt;/h3&gt;

&lt;p&gt;La console est complète, fonctionne en application mobile également.&lt;/p&gt;

&lt;p&gt;Un full accès aux logs en live est possible&lt;/p&gt;

&lt;h4 id=&quot;bigquery&quot;&gt;BigQuery&lt;/h4&gt;

&lt;p&gt;Il est possible de streamer les logs en live vers BigQuery, ce qui permet une approche plus intéressante de nos logs “plats”.
Pour la démo, les logs (un log par vote) de l’application sont insérés dans BigQuery et permettent de sortir toutes les informations des votes, donc de pouvoir double checker que les résultats calculés par l’applicatif sont cohérent.&lt;/p&gt;

&lt;h3 id=&quot;runtime-supports&quot;&gt;Runtime supportés&lt;/h3&gt;

&lt;p&gt;Avec la contenairization, AppEngine s’ouvre au monde. Google supporte Java, NodeJs, Go, Python, Ruby. Ils sont en train de définir les contraintes pour pouvoir rajouter un runtime custom, la communauté C# travaille déjà à supporter C# dans AppEngine.&lt;/p&gt;

&lt;h3 id=&quot;debug&quot;&gt;Debug&lt;/h3&gt;

&lt;p&gt;Il est possible de connecter différents SCM (github, bitbucket,…) à son projet afin de pouvoir naviguer dans le code source sans quitter la console google.&lt;/p&gt;

&lt;p&gt;C’est par cette interface qu’il y a la possibilité de debugger. Ce n’est pas vraiment du debugger au sens où on ne peut pas attacher de breakpoint et arrêter l’application. Il s’agit plutôt d’un watchpoint, qui permet de prendre des snapshots mémoire aux endroits indiqués. Super puissant comme outil, il permet vraiment de capturer l’état de l’application, sans bloquer l’expérience utilisateur. La démo a été faite sur NodeJs et Java, c’est impressionnant.&lt;/p&gt;

&lt;h3 id=&quot;kubernetes&quot;&gt;Kubernetes&lt;/h3&gt;

&lt;p&gt;Un groupe de machine (un pod) déployé en cluster. On décrit l’état souhaité de l’environnement (3 JVM, 1 Nginx) et le cluster se débrouille pour faire tourner tout ça “au mieux”. Il est capable de relancer les services sur d’autres machines si la machine venait à planter par exemple. Ce qu’il faut retenir au final c’est qu’avec 2 fichiers de conf on est capable de déclarer une architecture complexe à déployer, ça fait rêver.&lt;/p&gt;

&lt;h3 id=&quot;firebase&quot;&gt;Firebase&lt;/h3&gt;

&lt;p&gt;Solution de Backend As A Service, rachetée par google il y’a 6 mois, pour faire face au rachat de parse par facebook (la guerre continue).
Regardez le nobackend.coffee dans la démo. C’est juste bluffant. Firebase peut notifier les différentes applis d’une mise à jour de son état, en websocket.&lt;/p&gt;

&lt;p&gt;La démo est bien évidemment sur &lt;a href=&quot;https://github.com/CodeStory/devoxxcarpet&quot;&gt;github&lt;/a&gt;, elle contient de quoi lancer l’application en java, mais aussi en node js. D’ailleurs, n’hésitez pas à comparer les code produit en nodeJs avec celui en Java, vous serez surpris. Un article sur FluentHttp est prévu, c’est, je pense, le meilleur serveur web java8.&lt;/p&gt;

&lt;h2 id=&quot;hackergarten&quot;&gt;13:30-16:30 Hackergarten&lt;/h2&gt;

&lt;p&gt;Hop, dès la deuxième session on s’écarte du &lt;a href=&quot;http://agileek.github.io/java/2015/04/07/before-devoxx-france/&quot;&gt;planning&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Je suis allé faire un tour du côté des &lt;a href=&quot;http://hackergarten.net/&quot;&gt;Hackergarten&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A Computer Programming Contributor Group&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;afin de contribuer sur un projet de la communauté open source.&lt;/p&gt;

&lt;p&gt;À Devoxx le principe est le même que partout : des porteurs de projets présentent leur projet et des groupes se forment pour corriger des issues, ou ajouter des fonctionnalités au projet.&lt;/p&gt;

&lt;p&gt;Voici les sujets de cette année :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;AsciiDoctor&lt;/li&gt;
  &lt;li&gt;Golo&lt;/li&gt;
  &lt;li&gt;FluentLenium&lt;/li&gt;
  &lt;li&gt;Mockito&lt;/li&gt;
  &lt;li&gt;JHipster&lt;/li&gt;
  &lt;li&gt;RestX&lt;/li&gt;
  &lt;li&gt;VoxxRin&lt;/li&gt;
  &lt;li&gt;Ceylon&lt;/li&gt;
  &lt;li&gt;XWiki&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;J’ai choisi &lt;a href=&quot;https://github.com/FluentLenium/FluentLenium&quot;&gt;FluentLenium&lt;/a&gt; que j’ai pas mal utilisé dans des missions précédentes. C’est un wrapper de Sélénium en java, vachement plus simple à utiliser que Sélénium, avec tous les outils à portée de main pour faire ses tests sans galérer.&lt;/p&gt;

&lt;h3 id=&quot;bilan&quot;&gt;Bilan&lt;/h3&gt;

&lt;p&gt;C’est très intéressant de rentrer rapidement sur un projet par une issue, c’est un très bon exercice.
En plus ce n’était pas du temps perdu, car ma &lt;a href=&quot;https://github.com/FluentLenium/FluentLenium/pull/159&quot;&gt;merge request&lt;/a&gt; a été acceptée !&lt;/p&gt;

&lt;p&gt;Je repars avec du travail, j’ai trouvé de la duplication entre &lt;a href=&quot;https://github.com/FluentLenium/FluentLenium/blob/master/fluentlenium-core/src/main/java/org/fluentlenium/core/Fluent.java#L170&quot;&gt;Fluent&lt;/a&gt; et &lt;a href=&quot;https://github.com/FluentLenium/FluentLenium/blob/master/fluentlenium-core/src/main/java/org/fluentlenium/core/FluentAdapter.java#L102&quot;&gt;FluentAdapter&lt;/a&gt; (la méthode initPage).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Quand est-ce qu’on organise ça sur Toulouse?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;le-tar-du-terminal&quot;&gt;17:10-17:40 Le taré du terminal&lt;/h2&gt;

&lt;p&gt;Les sources sont &lt;a href=&quot;https://github.com/emmanuelbernard/command-line-nuts&quot;&gt;là&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Principe : Automatiser un maximum de choses pour ne pas casser son workflow quand on développe.&lt;/p&gt;

&lt;p&gt;Premier outil : Tmux, l’incontournable émulateur de terminal.&lt;/p&gt;

&lt;h3 id=&quot;deuxime-outil--vim&quot;&gt;Deuxième outil : Vim&lt;/h3&gt;

&lt;p&gt;Pas besoin de le présenter. Il découpe les commandes avec [action][repetition multiplier]&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Remettre plusieurs lignes sur une seule : passer en mode visuel, sélectionner les lignes et taper ‘J’.&lt;/li&gt;
  &lt;li&gt;f[character] : Aller au premier charactère trouvé&lt;/li&gt;
  &lt;li&gt;ci : se mettre sur une parenthèse, remplace tout ce qu’il y’a à l’intérieur des paranthèses.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Il existe des plugins pour avoir les raccourcis vim dans les IDE : IdeaVim (IntelliJ) et Vrapper (Eclipse)&lt;/p&gt;

&lt;h3 id=&quot;dotfiles&quot;&gt;Dotfiles&lt;/h3&gt;

&lt;p&gt;Conseil : les mettre sur git&lt;/p&gt;

&lt;h3 id=&quot;misc&quot;&gt;Misc&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;git
    &lt;ul&gt;
      &lt;li&gt;Tig : un outil git en ligne de commande&lt;/li&gt;
      &lt;li&gt;send-pull-request : script qui crée automatiquement une pull request sous github&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Commandes : faire un script qui lance la commande et qui envoie une notif d’OS à la fin (remote)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;maven&quot;&gt;18:40-19:10 Maven&lt;/h2&gt;

&lt;h3 id=&quot;jongler-entre-les-diffrentes-versions&quot;&gt;Jongler entre les différentes versions&lt;/h3&gt;

&lt;p&gt;Avec la prise en charge de Java par Oracle, les versions sont &lt;code&gt;deprecated&lt;/code&gt; beaucoup plus rapidement (en fait, elles ne sont pas dépréciées, elles deviennent juste … payantes).&lt;/p&gt;

&lt;p&gt;Java 6 devient très très payante et Java 7 devient deprecated ce mois-ci. Il faut donc pouvoir switcher de plus en plus rapidement et avec le moins de surprises (Ou prendre le support oracle et payer pour conserver les anciennes versions).&lt;/p&gt;

&lt;p&gt;Les différents conseils :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Utiliser les properties &lt;code&gt;maven.compiler.target&lt;/code&gt; et &lt;code&gt;maven.compiler.source&lt;/code&gt; pour spécifier la version Java&lt;/li&gt;
  &lt;li&gt;Utiliser le maven-enforcer-plugin &lt;code&gt;enforceBytecodeVersion&lt;/code&gt; pour s’assurer que toutes les dépendances sont utilisables par une JRE donnée&lt;/li&gt;
  &lt;li&gt;animal-sniffer-maven-plugin permet de contrôler que les bonnes versions d’API sont utilisées (ça peut être une rule CheckSignature dans le maven enforcer plugin pour éviter la multiplication des plugins)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;toolchains-et-jdk&quot;&gt;Toolchains et JDK&lt;/h3&gt;

&lt;p&gt;Permet d’utiliser un JDK pour compiler indépendant du JRE avec lequel Maven et ses plugins s’exécutent.&lt;/p&gt;

&lt;p&gt;L’idée c’est d’utiliser un JRE récent pour exécuter maven et ses plugins, tout en utilisant un autre JDK pour les phases de compilation.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Des toolchains customs existent pour protobuf, netbeans, …&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;maven-jdeps-plugin&quot;&gt;maven-jdeps-plugin&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Analyse statique des dépendances (préparation à JigSaw)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;les-autres-confs-marquantes&quot;&gt;Les autres confs marquantes&lt;/h2&gt;

&lt;p&gt;J’ai fait un petit tour auprès des gens que je connais et qui font devoxx pour savoir quelle avait été leur session préférée, ça me permettra de voir quoi regarder une fois les vidéos sur Parleys.&lt;/p&gt;

&lt;p&gt;Dans le désordre nous avons :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Hackergarten (Celle là ne seront pas sur Parleys)&lt;/li&gt;
  &lt;li&gt;Spring boot&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;Si vous suivez le compte de David Gageot, vous comprenez mieux pourquoi il demandait qu’on lui envoie des photos de tapis. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
            <pubDate>Wed, 08 Apr 2015 00:00:00 +0000</pubDate>
            <link>http://agileek.github.io/java/2015/04/08/devoxx-jour-1/</link>
            <guid isPermaLink="true">http://agileek.github.io/java/2015/04/08/devoxx-jour-1/</guid>
            
            
            <category>java</category>
            
        </item>
        
        <item>
            <title>Devoxx France : la préparation</title>
            <description>&lt;h2 id=&quot;devoxx-france&quot;&gt;Devoxx France&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/devoxx/devoxx_france.png&quot; alt=&quot;Devoxx&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cela fait maintenant 4 ans que devoxx se fait en France.&lt;/p&gt;

&lt;p&gt;Ça va faire la 3ème fois que j’y vais, et, pour en rater le moins possible, il faut être préparé.&lt;/p&gt;

&lt;p&gt;C’est une année particulière car, pour la première fois, devoxx se situera au palais des congrès. On peut voir que c’est pas la même dimension que les années précédentes qui prenaient place à l’hôtel Marriott Rive Gauche.&lt;/p&gt;

&lt;h3 id=&quot;ce-que-jattends&quot;&gt;Ce que j’attends&lt;/h3&gt;
&lt;p&gt;J’ai eu pas mal d’échos différents sur cette conférence, certains (dont je fais partie) ont adoré, d’autres moins.&lt;/p&gt;

&lt;p&gt;Je pense qu’au final cela dépend beaucoup de ce qu’on y recherche, et évidemment des speakers que l’on va (re)-découvrir.&lt;/p&gt;

&lt;p&gt;Pour être sûr de ne pas être pris au dépourvu, j’essaie de me faire un planning quelques jours avant, planning que je serai libre de ne pas suivre une fois sur place.&lt;/p&gt;

&lt;p&gt;Cette année j’ai décidé d’écrire noir sur blanc mon programme à l’avance, pour pouvoir voir le décalage lorsque je serai sur place.&lt;/p&gt;

&lt;h3 id=&quot;before&quot;&gt;Before&lt;/h3&gt;

&lt;p&gt;Cette année, c’est tout simplement monstrueux : 14 salles, jusqu’à 8 conférences en même temps, c’est encore plus impossible de tout suivre.&lt;/p&gt;

&lt;p&gt;Les années précédentes les vidéos se retrouvaient gratuitement sur parleys quelques temps après et c’était super.
J’espère qu’ils vont continuer sur cette lancée.&lt;/p&gt;

&lt;p&gt;Si vous avez quelques heures devant vous, vous pouvez y jeter un oeil &lt;a href=&quot;https://www.parleys.com/channel/devoxx-france-2014&quot;&gt;ici&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ma session préférée de 2014 est celle de Sandro Mancuso sur le &lt;a href=&quot;https://www.parleys.com/tutorial/software-craftsmanship&quot;&gt;Software Craftmanship&lt;/a&gt;, elle dure 50 minutes, c’est vraiment le genre de session dont on ressort avec des étoiles pleins les yeux et une envie de changer les choses.&lt;/p&gt;

&lt;h2 id=&quot;jour-1&quot;&gt;Jour 1&lt;/h2&gt;
&lt;p&gt;Le premier jour est le jour des universités et des “hand’s on labs”, sur des sessions de 3 heures.&lt;/p&gt;

&lt;p&gt;Voici ma première sélection :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;09:30-12:30
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/GOB-3561/La_Google_Cloud_Plaform_-_Au_dela_des_simples_demos&quot;&gt;Google Cloud Platform&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/QTQ-9573/Quand_DevOps_rencontre_BigData!&quot;&gt;Devops rencontre BigData&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;13:30-16:30
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/SDF-5956/Go_tutorial&quot;&gt;Go tutorial&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pour les survivants, il y’a ensuite les “tools in action” jusqu’à 19h10&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;17:10-17:40
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/CLG-8656/Le_tare_du_terminal:_outil_pour_le_developpeur_de_l&#39;extreme&quot;&gt;Le taré du terminal&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/UNS-9214/OpenBCI_ou_comment_lire_dans_les_pensees_en_Java&quot;&gt;OpenBCI ou comment lire dans les pensées en Java&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;17:55-18:25
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/UWP-3010/Un_Jenkins_ameliore_avec_Docker,_Mesos_et_Marathon&quot;&gt;Un Jenkins amélioré avec Docker, Mesos et Marathon&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/MSU-2600/Developpement_Java_avec_un_IDE_dans_le_Cloud:_YES_WE_CAN&quot;&gt;Développement Java avec un IDE dans le Cloud&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/ZMG-1345/WireMock,_le_serveur_HTTP_couteau_suisse&quot;&gt;WireMock, le serveur HTTP couteau suisse&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;18:40-19:10
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/FEM-9840/Quand_Java_prend_de_la_vitesse,_Apache_Maven_vous_garde_sur_les_rails&quot;&gt;Quand Java prend de la vitesse, Apache Maven vous garde sur les rails&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/FPD-2699/Une_presentation_qui_ne_manque_pas_d&#39;R!&quot;&gt;Une présentation qui ne manque pas d’R!&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;jour-2&quot;&gt;Jour 2&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;09:30-10:50
    &lt;ul&gt;
      &lt;li&gt;Keynote&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;11:15-12:05
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/PRN-0316/Datomic,_la_base_de_donnees_qui_n&#39;oublie_rien&quot;&gt;Datomic, la base de données qui n’oublie rien&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/ZLE-4944/Coding,_fast_&amp;amp;_slow&quot;&gt;Coding, fast &amp;amp; slow&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;12:10-12:30
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/MPO-1830/Avro:_la_souplesse_du_JSON,_les_performances_du_binaire&quot;&gt;Avro: la souplesse du JSON, les performances du binaire&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/AIC-9053/Ignite_1&quot;&gt;Ignite 1&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;12:35-12:55
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/YSP-5366/Du_100%25_pur_Guice_!&quot;&gt;Du 100% pur Guice !&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;13:00-13:50
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/KFB-1486/UX_:_le_Poids_des_Mots...&quot;&gt;UX : le Poids des Mots…&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;14:05-14:55
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/UVY-4302/Refactoring_to_Functional&quot;&gt;Refactoring to Functional&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/QDM-2722/Changing_the_wheel_of_a_moving_car_-_faire_evoluer_l&#39;infra_sans_interruption&quot;&gt;Changing the wheel of a moving car - faire évoluer l’infra sans interruption&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;15:10-16:00
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/FJN-6482/Java_Mission_Control_for_Earthlings&quot;&gt;Java Mission Control for Earthlings&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/SDO-9958/Applications_Concurrentes_Polyglottes_avec_Vert.x&quot;&gt;Applications Concurrentes Polyglottes avec Vert.x&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;16:35-17:25
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/MXY-8408/Modular_Java_Platform&quot;&gt;Modular Java Platform&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/AIM-2044/Caching_reboot:_javax.cache_&amp;amp;_Ehcache_3&quot;&gt;Caching reboot: javax.cache &amp;amp; Ehcache 3&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;17:40-18:30
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/ZTF-9055/Making_Java_more_dynamic&quot;&gt;Making Java more dynamic&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;18:45-19:15
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/WSU-8098/App_Engine_Managed_VMs_et_Fluent-http,_un_mariage_heureux&quot;&gt;App Engine Managed VMs et Fluent-http, un mariage heureux&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Les BOF en vrac :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/SRB-3347/BOF_Docker_Paris&quot;&gt;BOF docker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/HZH-3776/Comment_vivre_d&#39;un_projet_open_source&quot;&gt;Comment vivre d’un projet open source&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;jour-3&quot;&gt;Jour 3&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;09:30-10:50
    &lt;ul&gt;
      &lt;li&gt;Keynote&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;11:15-12:05
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/NLG-1280/Des_tablettes_d&#39;ecriture_aux_tablettes_pour_ecrire&quot;&gt;Des tablettes d’écriture aux tablettes pour écrire&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;12:10-12:30
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/LAB-4049/Vos_managers_ne_veulent_pas_entendre_parler_de_la_dette_technique,_tant_mieux_!&quot;&gt;Vos managers ne veulent pas entendre parler de la dette technique, tant mieux !&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;12:35-12:55
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/QCT-3215/Culture_Craft&quot;&gt;Culture Craft&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;13:00-13:50
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/JCB-0202/Building__fault_tolerant_microservices&quot;&gt;Building fault tolerant microservices&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/OGO-9138/Les_monoides_demystifies,_en_Java_et_avec_des_verres_de_biere&quot;&gt;Les monoïdes démystifiés, en Java et avec des verres de bière&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;14:05-14:55
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/JXF-2137/Ask_the_Architect_Questions_and_Answers&quot;&gt;Ask the Architect Questions and Answers&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;15:10-16:00
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://cfp.devoxx.fr/2015/talk/HYK-7903/La_revolution_hors-ligne_du_Web_arrive_avec_les_Service_Workers&quot;&gt;La révolution hors-ligne du Web arrive avec les Service Workers&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;ps&quot;&gt;PS&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Comme vous pouvez le voir, il y’a plusieurs sessions auxquelles je voudrais assister en même temps, ça part mal.&lt;/li&gt;
&lt;/ul&gt;

</description>
            <pubDate>Tue, 07 Apr 2015 00:00:00 +0000</pubDate>
            <link>http://agileek.github.io/java/2015/04/07/before-devoxx-france/</link>
            <guid isPermaLink="true">http://agileek.github.io/java/2015/04/07/before-devoxx-france/</guid>
            
            
            <category>java</category>
            
        </item>
        
        <item>
            <title>AssertJ 3.0.0 for Java 8</title>
            <description>&lt;p&gt;AssertJ est enfin sorti avec le support de Java8.&lt;/p&gt;

&lt;p&gt;Je le considère comme le meilleur outil de tests unitaires pour Java. Son approche est la suivante : une assertion doit être lisible par un humain.&lt;/p&gt;

&lt;p&gt;Pour vous en faire la démonstration, je vais vous montrer plusieurs exemples avec assertJ, en les comparant avec les assertions Junit.&lt;/p&gt;

&lt;h2 id=&quot;exemples&quot;&gt;Exemples&lt;/h2&gt;

&lt;h3 id=&quot;boolean-check&quot;&gt;Boolean check&lt;/h3&gt;

&lt;h4 id=&quot;junit&quot;&gt;Junit&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;assertTrue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;myBooleanValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;assertj&quot;&gt;AssertJ&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;myBooleanValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isTrue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;list-checks&quot;&gt;List checks&lt;/h3&gt;
&lt;p&gt;Supposons cette liste :&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;ImmutableList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elementList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ImmutableList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
						&lt;span class=&quot;s&quot;&gt;&amp;quot;element1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; 
						&lt;span class=&quot;s&quot;&gt;&amp;quot;element2&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; 
						&lt;span class=&quot;s&quot;&gt;&amp;quot;element3&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Si je veux vérifier que les éléments sont bien présents&lt;/p&gt;

&lt;h4 id=&quot;junit-1&quot;&gt;Junit&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elementList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;element1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elementList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;element2&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elementList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;element3&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elementList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;assertj-1&quot;&gt;AssertJ&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;elementList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hasSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;elementList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;containsExactly&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;element1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;element2&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;element3&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Et je ne vous montre que le &lt;code&gt;containsExactly&lt;/code&gt;, il en existe plein d’autres (containsOnly, containsSubsequence, …).&lt;/p&gt;

&lt;h2 id=&quot;dry--kiss&quot;&gt;DRY &amp;amp; KISS&lt;/h2&gt;

&lt;p&gt;C’est vraiment ce que j’apprécie dans cette librairie : tout a été pensé pour que l’on ne perde pas de temps dans nos asserts.&lt;/p&gt;

&lt;p&gt;Et quand on se retrouve avec des cas tordus&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;, il y’a la possibilité de définir vos propres assertions (il y’a même un &lt;a href=&quot;http://joel-costigliola.github.io/assertj/assertj-assertions-generator.html&quot;&gt;générateur&lt;/a&gt; pour ça).&lt;/p&gt;

&lt;h2 id=&quot;et-java-8-dans-tout-a-&quot;&gt;Et Java 8 dans tout ça ?&lt;/h2&gt;

&lt;p&gt;La version 3.0.0 d’AssertJ fonctionne avec Java 8 et apporte son lot de sucre syntaxique.&lt;/p&gt;

&lt;p&gt;Vous pouvez jeter un oeil sur la &lt;a href=&quot;http://joel-costigliola.github.io/assertj/assertj-core-news.html#assertj-core-3.0.0&quot;&gt;release note&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;datetime-assertions&quot;&gt;Date/Time assertions&lt;/h3&gt;
&lt;p&gt;Regardez les exemples de la release note, il n’y a rien à rajouter, c’est parfait, tout est là.&lt;/p&gt;

&lt;h3 id=&quot;exceptions&quot;&gt;Exceptions&lt;/h3&gt;

&lt;h4 id=&quot;junit-2&quot;&gt;Junit&lt;/h4&gt;

&lt;p&gt;Avec Junit, plusieurs choix, soit :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;on catch et on assert (Berk)&lt;/li&gt;
  &lt;li&gt;on marque dans l’annotation @Test que l’on attend une exception (Re-Berk, on ne sait pas si l’exception a été lancée par ce qu’on voulait, ou par du code au dessus)&lt;/li&gt;
  &lt;li&gt;on utilise la Rule ExpectedException&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@Rule&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ExpectedException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expectedException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ExpectedException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldThrowExceptionWhenNull&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expectedException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NullPointerException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expectedException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;expectMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Enum is null&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;MyEnum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fromName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;assertj-3&quot;&gt;AssertJ 3&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldThrowExceptionWhenNull&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Throwable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;throwable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;catchThrowable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyEnum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fromName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;throwable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isInstanceOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NullPointerException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                         &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hasMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Enum is null&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Maintenant, on est capable de séparer le “When” du “Then”, chose qui n’était avant possible qu’en faisant un try-catch.&lt;/p&gt;

&lt;h3 id=&quot;optionals&quot;&gt;Optionals&lt;/h3&gt;

&lt;h4 id=&quot;junit-3&quot;&gt;Junit&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldAssertOptional&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Optional&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;optional&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Optional&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;optionalTest&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertTrue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;optional&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isPresent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;optionalTest&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;optional&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;assertj-3-1&quot;&gt;AssertJ 3&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shouldAssertOptional&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Optional&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;optional&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Optional&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;optionalTest&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;optional&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isPresent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;optionalTest&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;approximation-des-primitives&quot;&gt;Approximation des primitives&lt;/h3&gt;

&lt;p&gt;Je ne suis pas sûr de l’utilité de celle là, d’un côté je pense que si on n’est pas capable de déterminer la sortie exacte d’un test, c’est qu’on a un problème.
De l’autre, je me dis que ça peut être super, par exemple quand on fait des tests avec des nombres pseudo-aléatoires.&lt;/p&gt;

&lt;p&gt;Bref, ça donne ça :&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isCloseTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;within&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;matches&quot;&gt;matches&lt;/h3&gt;

&lt;p&gt;Celui là peut être super, ou super dangereux.&lt;/p&gt;

&lt;p&gt;Voici l’exemple de la release note:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;TolkienCharacter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;frodo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TolkienCharacter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Frodo&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;33&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HOBBIT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// actual refers to frodo &lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;frodo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HOBBIT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Si on change l’âge de frodo à ‘25’ l’erreur remontée est la suivante :&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;AssertionError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; 
&lt;span class=&quot;nl&quot;&gt;Expecting:&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bitard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;AssertJ3Test$TolkienCharacter&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;721&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e0f4f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;given&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;predicate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;You&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;can&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Predicate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;have&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;better&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;For&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;example:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isRookie&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;is rookie&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;will&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;give&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;an&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;looking&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;like:&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;Expecting:&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rookie&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;predicate&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bitard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;AssertJ3Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;shouldAssertMatches&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AssertJ3Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;.....&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Je sais pas vous, mais moi je préfère ça :&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;ava&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;AssertionError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; 
&lt;span class=&quot;nl&quot;&gt;Expecting:&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;greater&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;than:&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 
	&lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bitard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;AssertJ3Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;shouldAssertMatches&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AssertJ3Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ce qui est donné par les asserts suivant :&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;frodo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isGreaterThan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;frodo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;race&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Race&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;HOBBIT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;bilan&quot;&gt;Bilan&lt;/h3&gt;

&lt;p&gt;C’est une super bonne nouvelle, surtout pour les dates, les exceptions et les optionals. Pour les autres, je suis plus mitigé, à voir à l’usage.&lt;/p&gt;

&lt;p&gt;Et vous, vous en pensez quoi ?&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;C’est peut-être un problème de conception ? &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
            <pubDate>Mon, 06 Apr 2015 00:00:00 +0000</pubDate>
            <link>http://agileek.github.io/java/2015/04/06/assertJ-3.0.0/</link>
            <guid isPermaLink="true">http://agileek.github.io/java/2015/04/06/assertJ-3.0.0/</guid>
            
            
            <category>java</category>
            
        </item>
        
        <item>
            <title>Moelleux au chocolat</title>
            <description>&lt;p&gt;Comme aujourd’hui c’est la journée mondiale du chocolat (Ha non, en fait c’est &lt;strong&gt;&lt;em&gt;Pâques&lt;/em&gt;&lt;/strong&gt;), c’est l’occasion pour moi de commencer une section recettes.&lt;/p&gt;

&lt;p&gt;Quoi de mieux pour commencer que des moelleux au chocolat. En plus, vous pouvez les cacher dans le jardin, c’est vachement mieux que des oeufs, non?&lt;/p&gt;

&lt;h2 id=&quot;moelleux-au-chocolat&quot;&gt;Moelleux au chocolat&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Préparation : 15 minutes&lt;/li&gt;
  &lt;li&gt;Repos : 30 minutes&lt;/li&gt;
  &lt;li&gt;Cuisson : 10 minutes&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ingrdients&quot;&gt;Ingrédients&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;200&lt;/em&gt;&lt;/strong&gt; g de chocolat noir extra&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;200&lt;/em&gt;&lt;/strong&gt; g de beurre&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;5&lt;/em&gt;&lt;/strong&gt; oeufs&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;300&lt;/em&gt;&lt;/strong&gt; g de sucre&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;65&lt;/em&gt;&lt;/strong&gt; g de farine&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;prparation&quot;&gt;Préparation&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Faire fondre le chocolat au bain marie avec le beurre coupé en morceaux. Fouetter pour lisser la préparation et laisser refroidir.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Battre les oeufs dans un récipient avec le sucre. Ajouter la farine, fouetter, puis mélanger la préparation avec le mélange choco-beurre. Laisser reposer 30 min.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Préchauffer le four à 180°C. Répartir la préparation dans les moules.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Enfourner les moelleux pendant 10-12 min. Laisser reposer 5 min puis démouler délicatement. Servir tiède.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;astuce&quot;&gt;Astuce&lt;/h3&gt;

&lt;p&gt;Tout se joue sur le temps de cuisson, il faut bien les surveiller pour qu’ils restent fondants à l’intérieur.&lt;/p&gt;

</description>
            <pubDate>Sun, 05 Apr 2015 00:00:00 +0000</pubDate>
            <link>http://agileek.github.io/food/2015/04/05/food-moelleux-au-chocolat/</link>
            <guid isPermaLink="true">http://agileek.github.io/food/2015/04/05/food-moelleux-au-chocolat/</guid>
            
            <category>dessert</category>
            
            
            <category>food</category>
            
        </item>
        
        <item>
            <title>Docker Tips #1: Beware the &#39;rm&#39;</title>
            <description>&lt;p&gt;This begins a serie of docker tips.&lt;/p&gt;

&lt;h2 id=&quot;scenario&quot;&gt;Scenario&lt;/h2&gt;

&lt;p&gt;I want to remove a container from my host&lt;/p&gt;

&lt;h3 id=&quot;given&quot;&gt;Given&lt;/h3&gt;
&lt;p&gt;My very simple Dockerfile&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-docker&quot; data-lang=&quot;docker&quot;&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; phusion/baseimage:0.9.16
&lt;span class=&quot;k&quot;&gt;RUN&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;useless &lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;VOLUME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/data&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;built with &lt;code&gt;docker build -t test .&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;given-1&quot;&gt;Given&lt;/h3&gt;
&lt;p&gt;A container based on this image started with&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;docker run --name test_container -ti &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; /bin/dd &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/dev/zero &lt;span class=&quot;nv&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/data/agileek_test.file &lt;span class=&quot;nv&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;102400&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;bs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1024&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;when&quot;&gt;When&lt;/h3&gt;
&lt;p&gt;I remove it: &lt;code&gt;docker rm test_container&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;then&quot;&gt;Then&lt;/h3&gt;
&lt;p&gt;I expect to have everything &lt;strong&gt;&lt;em&gt;deleted&lt;/em&gt;&lt;/strong&gt;, right? &lt;strong&gt;&lt;em&gt;Wrong&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;explanations&quot;&gt;Explanations&lt;/h2&gt;

&lt;p&gt;If you look at &lt;code&gt;/var/lib/docker/vfs/dir/&lt;/code&gt; you will have something like that&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/var/lib/docker/vfs/dir
├── 1fe7caeb0d0d70e199e529fc006713d79078dceff821bf4f9d0a9c52b7c16b63
├── 6dd51767e69d10859f605795d93fe1d0b2a3b8113ed05fffc2e7941f2d5546d3
│   └── agileek_test.file
├── 72ba5f35eb914871fab207d174c90668cf15979fa42a9e1a175febf257efba26&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As you can see, the agileek_test.file is still here, without attached container, like a ghost folder on your system.&lt;/p&gt;

&lt;h3 id=&quot;the-volume-command&quot;&gt;The Volume command&lt;/h3&gt;
&lt;p&gt;The fact that I specified &lt;code&gt;VOLUME [&quot;/data&quot;]&lt;/code&gt; in my Dockerfile tells docker to treat this folder differently.&lt;/p&gt;

&lt;p&gt;Almost every time when you use the VOLUME command, later when you run it, you mount this volume (on the host, or linked to another container) with &lt;code&gt;-v&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;But when you forgot to do this, docker automatically creates a folder in a Virtual File System (on ubuntu, /var/lib/docker/vfs) and doesn’t delete it, even when you remove your container.&lt;/p&gt;

&lt;p&gt;You can see with &lt;code&gt;docker inspect test_container&lt;/code&gt; which folder has been created&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Volumes&amp;quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;quot;/data&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/var/lib/docker/vfs/dir/6dd51767e69d10859f605795d93fe1d0b2a3b8113ed05fffc2e7941f2d5546d3&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;but once you delete it, you’ve lost the information and this folder is “lost”&lt;/p&gt;

&lt;h3 id=&quot;what-can-i-do-&quot;&gt;What can I do ?&lt;/h3&gt;

&lt;p&gt;The best practice is of course to always mount the folder that you declared with VOLUME in your Dockerfile.&lt;/p&gt;

&lt;p&gt;The other good practice is to &lt;strong&gt;&lt;em&gt;Read The Manual&lt;/em&gt;&lt;/strong&gt; (Of course, I didn’t do it) because:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker rm --help

Usage: docker rm &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;OPTIONS&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; CONTAINER &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;CONTAINER...&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

Remove one or more containers

  -f, --force&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false      &lt;/span&gt;Force the removal of a running container &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;uses SIGKILL&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  --help&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false           &lt;/span&gt;Print usage
  -l, --link&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false       &lt;/span&gt;Remove the specified link and not the underlying container
  -v, --volumes&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false    &lt;/span&gt;Remove the volumes associated with the container&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;there is a &lt;strong&gt;&lt;em&gt;-v&lt;/em&gt;&lt;/strong&gt; option that Remove the volumes associated with the container&lt;/p&gt;

&lt;p&gt;I really wished I found this before our server went full.&lt;/p&gt;
</description>
            <pubDate>Sat, 04 Apr 2015 00:00:00 +0000</pubDate>
            <link>http://agileek.github.io/docker/2015/04/04/docker-rm/</link>
            <guid isPermaLink="true">http://agileek.github.io/docker/2015/04/04/docker-rm/</guid>
            
            
            <category>docker</category>
            
        </item>
        
        <item>
            <title>Maven 3.3.1: La mort du pom.xml</title>
            <description>&lt;p&gt;&lt;img src=&quot;/images/posts/maven/maven_logo.png&quot; alt=&quot;Maven&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;maven&quot;&gt;Maven&lt;/h2&gt;

&lt;p&gt;Haaaa, maven, le seul, l’unique. On l’a tous détesté pour plein de raisons, que ce soit :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;son fonctionnement ‘convention over configuration’&lt;/li&gt;
  &lt;li&gt;sa lenteur&lt;/li&gt;
  &lt;li&gt;sa capacité à télécharger la terre entière&lt;/li&gt;
  &lt;li&gt;son cycle de vie limité.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sans oublier sa syntaxe ultra verbeuse en &lt;strong&gt;&lt;em&gt;XML&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;le-constat&quot;&gt;Le constat&lt;/h3&gt;

&lt;p&gt;Petit rappel qui pique les yeux : voici comment déclarer &lt;strong&gt;&lt;em&gt;UNE&lt;/em&gt;&lt;/strong&gt; dépendance dans son pom :&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;net.code-story&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;http&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.83&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;test&lt;span class=&quot;nt&quot;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ça fait quand même &lt;strong&gt;&lt;em&gt;6&lt;/em&gt;&lt;/strong&gt; lignes pour &lt;strong&gt;&lt;em&gt;1&lt;/em&gt;&lt;/strong&gt; dépendance, soyons réalistes, c’est juste ignoble…&lt;/p&gt;

&lt;h3 id=&quot;polyglot&quot;&gt;Polyglot&lt;/h3&gt;
&lt;p&gt;Annoncé il y’a très longtemps (j’en ai entendu parler en 2012, il y avait quelques articles prometteurs), maven-polyglot avait pour but de rajouter le support de plusieurs langages dans les pom. Ça a été complètement abandonné et toutes les resources ont &lt;a href=&quot;http://stackoverflow.com/questions/11170057/what-happened-to-maven-polyglot&quot;&gt;disparues du net&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;C’est récemment revenu au goût du jour avec Maven 3.3.1 (17 mars 2015) et l’arrivée du “Core Extension Mechanism” amélioré. Maintenant, pour modifier le coeur de maven (ok, je simplifie), il “suffit” de rajouter à la base de son projet maven &lt;code&gt;.mvn/extensions.xml&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;concrtement-a-ressemble--quoi-&quot;&gt;Concrètement, ça ressemble à quoi ?&lt;/h3&gt;

&lt;p&gt;À ça :&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;extensions&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;extension&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.takari.polyglot&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;polyglot-yaml&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.1.7&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/extension&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/extensions&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Vous remarquerez que pour le moment on s’est pas trop débarrassé du XML, on en a même rajouté…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;il-sest-pass-quoi-&quot;&gt;Il s’est passé quoi ?&lt;/h3&gt;
&lt;p&gt;Concrètement, vous venez de rajouter le support de lecture des pom.yml et pom.yaml. &lt;strong&gt;&lt;em&gt;C’est pas énorme ça ?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ensuite, Vous pouvez convertir votre &lt;code&gt;pom.xml&lt;/code&gt; grâce à un plugin via cette commande :&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;mvn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;takari&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;polyglot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;polyglot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;translate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;plugin:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;translate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dinput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;xml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Doutput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;yml&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Et voilà, vous pouvez vous débarrasser du pom.xml et lancer &lt;code&gt;mvn clean install&lt;/code&gt;. Vérifier que tout fonctionne comme avant quand même, on ne sait jamais.&lt;/p&gt;

&lt;p&gt;Pour le plaisir des yeux, voici la même dépendance en yaml&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p-Indicator&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;groupId&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;net.code-story&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;artifactId&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;2.9.1&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Je trouve ça infiniment plus lisible. (Ok, c’est one-line, mais franchement, c’est lisible, essayez de mettre le xml sur une ligne, pour la blague).&lt;/p&gt;

&lt;h3 id=&quot;cest-tout--cest-bon-on-peut-supprimer-nos-pomxml-&quot;&gt;C’est tout ? C’est bon on peut supprimer nos pom.xml ?&lt;/h3&gt;

&lt;p&gt;Malheureusement non, car si maven s’en sort très bien, ce n’est pas le cas (encore) des IDE.&lt;/p&gt;

&lt;p&gt;Donc pour le moment si vous tenez absolument à vous débarrasser des pom.xml, vous pouvez faire en sorte de transformer votre pom.yml en pom.xml avec le même plugin. Ça duplique les fichiers, c’est moche, mais ça fonctionne.&lt;/p&gt;

&lt;p&gt;Si vous êtes un peu patient, vous pouvez attendre que votre IDE favori implémente le support du polyglot en natif.&lt;/p&gt;

&lt;h4 id=&quot;intellij&quot;&gt;Intellij&lt;/h4&gt;
&lt;p&gt;Pour avoir le support sous IntelliJ, n’hésitez pas à allez voter là : &lt;a href=&quot;https://youtrack.jetbrains.com/issue/IDEA-138776&quot;&gt;IDEA-138776&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;ps&quot;&gt;PS&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Je vous ai parlé que de yaml, mais il existe déjà plein d’autres langages
    &lt;ul&gt;
      &lt;li&gt;atom&lt;/li&gt;
      &lt;li&gt;groovy&lt;/li&gt;
      &lt;li&gt;ruby&lt;/li&gt;
      &lt;li&gt;scala&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;En ruby par exemple il y’a la possibilité d’appeler du code ruby directement dans le pom.rb. Je trouve ça vraiment pas propre, à voir à l’usage.&lt;/li&gt;
  &lt;li&gt;N’hésitez pas à aller voir les &lt;a href=&quot;https://github.com/takari/polyglot-maven-examples&quot;&gt;différents exemples&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Un de nos pom faisait 205 lignes, il en fait maintenant 74, en étant plus lisible&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;C’est mon opinion personnelle à moi, vous avez le droit de préférer le xml &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
            <pubDate>Fri, 03 Apr 2015 00:00:00 +0000</pubDate>
            <link>http://agileek.github.io/java/2015/04/03/maven-polyglot/</link>
            <guid isPermaLink="true">http://agileek.github.io/java/2015/04/03/maven-polyglot/</guid>
            
            
            <category>java</category>
            
        </item>
        
        <item>
            <title>Jekyll : ajouter des catégories à vos menus</title>
            <description>&lt;h2 id=&quot;jekyll&quot;&gt;Jekyll&lt;/h2&gt;

&lt;p&gt;Comme il y’a &lt;strong&gt;&lt;em&gt;énormément&lt;/em&gt;&lt;/strong&gt; de posts sur ce blog, j’ai eu envie de pouvoir lister les posts par catégories.&lt;/p&gt;

&lt;p&gt;Je me suis dis que c’était relativement facile, et au final j’y ai passé un moment avant de réussir à le faire fonctionner complètement avec githup pages.&lt;/p&gt;

&lt;p&gt;J’ai trouvé des resources un peu partout mais rien qui expliquait de bout en bout la manipulation, d’où le post.&lt;/p&gt;

&lt;h3 id=&quot;le-gnrateur&quot;&gt;Le générateur&lt;/h3&gt;

&lt;p&gt;Jekyll sert statiquement les pages, il n’y a donc pas la possibilité de récupérer les paramètres de l’url pour s’en servir.&lt;/p&gt;

&lt;p&gt;Par exemple, j’aurais aimé que &lt;code&gt;http://agileek.github.io/?category=docker&lt;/code&gt; fonctionne.&lt;/p&gt;

&lt;p&gt;Ce n’est pas possible de le faire autrement que par javascript (ce qui implique de charger tous les posts côté client), ce que je ne trouve pas optimal.&lt;/p&gt;

&lt;p&gt;Si vous voulez le faire, jetez un oeil au &lt;a href=&quot;https://github.com/danielsiwiec/danielsiwiec.github.io/commit/cf04dd322f5ffe2251ca6e3733d2707c2eaec7d4&quot;&gt;commit&lt;/a&gt; de &lt;a href=&quot;https://github.com/danielsiwiec/&quot;&gt;@danielsiwiec&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;ct-serveur&quot;&gt;Côté serveur&lt;/h4&gt;

&lt;p&gt;Je me suis attaqué aux plugins de jekyll, plus précisément aux &lt;a href=&quot;http://jekyllrb.com/docs/plugins/#generators&quot;&gt;generators&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Je n’ai rien touché au code du générateur de catégories qui est dans la doc de jekyll:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Jekyll&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CategoryPage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Page&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;category&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@site&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@base&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@dir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dir&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;index.html&amp;#39;&lt;/span&gt;

      &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_yaml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;_layouts&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;category_index.html&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;category&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;category&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;category_title_prefix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;category_title_prefix&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Category: &amp;#39;&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;category_title_prefix&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;category&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CategoryPageGenerator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Generator&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;safe&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;generate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layouts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;category_index&amp;#39;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;dir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;category_dir&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;categories&amp;#39;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;categories&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each_key&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;category&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pages&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CategoryPage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;category&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;category&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Par contre ce qu’ils n’expliquent pas (ou pas bien), c’est qu’il faut un fichier de template pour pouvoir générer toutes les pages de catégories.&lt;/p&gt;

&lt;p&gt;Voici le &lt;a href=&quot;https://github.com/agileek/agileek.github.io/commit/14d1c8ffb3863fd5746cb28daefa5aee3f1bf99f&quot;&gt;commit&lt;/a&gt;, qui contient également la partie template web (le &lt;code&gt;category_index.html&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Et voilà, ça fonctionne parfaitement sur &lt;strong&gt;&lt;em&gt;mon poste&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;et-docker-dans-tout-a&quot;&gt;Et docker dans tout ça&lt;/h3&gt;

&lt;p&gt;Vous l’avez peut-être remarqué, mais il y’a le tag docker sur ce post, si vous vous demandez pourquoi, voilà la raison :&lt;/p&gt;

&lt;p&gt;Github ne permet pas d’exécuter les plugins jekyll (il le lance avec &lt;code&gt;--safe&lt;/code&gt;) donc ce qui fonctionnait &lt;strong&gt;&lt;em&gt;sur mon poste&lt;/em&gt;&lt;/strong&gt; ne fonctionnait pas en ligne.&lt;/p&gt;

&lt;p&gt;Il me faut donc générer statiquement le blog et le commiter sur master “à la mano”.&lt;/p&gt;

&lt;p&gt;Comme je me sers déjà de docker pour &lt;a href=&quot;http://agileek.github.io/docker/jekyll/2014/07/23/jekyll-and-docker/&quot;&gt;tester mon site&lt;/a&gt;, autant m’en servir pour le builder.&lt;/p&gt;

&lt;p&gt;Je me suis inspiré de &lt;a href=&quot;http://nicoespeon.com/en/2013/04/building-a-multinlingual-jekyll-blog/&quot;&gt;cet article&lt;/a&gt;, surtout de son &lt;a href=&quot;https://github.com/nicoespeon/nicoespeon.github.io/blob/develop/Makefile&quot;&gt;makefile&lt;/a&gt;, pour faire le &lt;a href=&quot;https://github.com/agileek/agileek.github.io/blob/develop/Makefile&quot;&gt;mien&lt;/a&gt; :&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-make&quot; data-lang=&quot;make&quot;&gt;&lt;span class=&quot;nv&quot;&gt;JEKYLL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; docker run --rm -v &lt;span class=&quot;s2&quot;&gt;&amp;quot;$(shell pwd):/src&amp;quot;&lt;/span&gt; -p 4000:4000 grahamc/jekyll
&lt;span class=&quot;nv&quot;&gt;RUNNER&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;whoami&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;COMMIT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;git rev-parse --short HEAD&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
  @&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JEKYLL&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; serve --watch -H 0.0.0.0 --drafts

&lt;span class=&quot;nf&quot;&gt;deploy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
  @echo &lt;span class=&quot;s2&quot;&gt;&amp;quot;Building site&amp;quot;&lt;/span&gt;
  @&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JEKYLL&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; build
  @git checkout master
  @sudo chown -R &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;RUNNER&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;. _site &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo cp -r _site/* . &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo rm -rf _*/
  @git add --all . &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git commit -m &lt;span class=&quot;s2&quot;&gt;&amp;quot;Jekyll deployment from commit ${COMMIT}&amp;quot;&lt;/span&gt;
  @echo &lt;span class=&quot;s2&quot;&gt;&amp;quot;You can now push master&amp;quot;&lt;/span&gt;
  @echo &lt;span class=&quot;s2&quot;&gt;&amp;quot;Once everything is valid, git checkout develop &amp;amp;&amp;amp; sudo git clean -f -d&amp;quot;&lt;/span&gt;
  @python -m SimpleHTTPServer 4000&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Maintenant, je n’ai même plus besoin de me souvenir de la commande jekyll à taper, un simple &lt;code&gt;make test&lt;/code&gt; suffit.&lt;/p&gt;

&lt;p&gt;Quand je suis satisfait du résultat, un &lt;code&gt;make deploy&lt;/code&gt; suivi d’un &lt;code&gt;git push&lt;/code&gt; de &lt;code&gt;master&lt;/code&gt; et c’est en ligne.&lt;/p&gt;

&lt;p&gt;Du coup je me suis amusé à rajouter un &lt;a href=&quot;http://agileek.github.io/archives/index.html&quot;&gt;generateur d’archives&lt;/a&gt; qui me classe les articles par années. Inutile, donc indispensable. Si ça vous intéresse, le commit est &lt;a href=&quot;https://github.com/agileek/agileek.github.io/commit/5f60f98cac273ee53dc4b458a06ba9e668f054b7&quot;&gt;là&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;edit-2015-04-03&quot;&gt;Edit 2015-04-03&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Jean-Philippe m’a expliqué qu’il n’y avait pas besoin de générateur pour les archives, ce qui est beaucoup plus simple et plus propre.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Voici la &lt;a href=&quot;https://github.com/barreverte/barreverte.github.io/blob/master/archive.html&quot;&gt;page en question&lt;/a&gt;. Je vous conseille de faire un tour sur leur &lt;a href=&quot;http://www.barreverte.fr/&quot;&gt;blog&lt;/a&gt;, c’est fait par des anciens collègues que j’apprécie énormément.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;rsultat&quot;&gt;Résultat&lt;/h2&gt;

&lt;p&gt;Maintenant, les images à droites des posts sur la page principale sont cliquables!!!!&lt;/p&gt;

&lt;p&gt;C’est pas magnifique ça? Non? Mince alors.&lt;/p&gt;

&lt;h4 id=&quot;ps-&quot;&gt;PS :&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Petit précision, ça peut fonctionner avec les ‘tags’ bien sûr&lt;/li&gt;
&lt;/ul&gt;

</description>
            <pubDate>Thu, 02 Apr 2015 00:00:00 +0000</pubDate>
            <link>http://agileek.github.io/docker/jekyll/2015/04/02/jekyll-generator-with-github/</link>
            <guid isPermaLink="true">http://agileek.github.io/docker/jekyll/2015/04/02/jekyll-generator-with-github/</guid>
            
            
            <category>docker</category>
            
            <category>jekyll</category>
            
        </item>
        
        <item>
            <title>One day, one post, one month</title>
            <description>&lt;h2 id=&quot;challenge-du-mois&quot;&gt;Challenge du mois&lt;/h2&gt;

&lt;p&gt;J’ai commencé ce blog en Juillet 2014 avec plein d’idées, de sujets, de bonnes résolutions.&lt;/p&gt;

&lt;p&gt;Résultat, 9 mois plus tard, 3 billets en ligne… c’est pas fameux comme bilan.&lt;/p&gt;

&lt;p&gt;Je me suis rendu compte que c’était difficile de blogger pour plein de raisons:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;On trouve toujours autre chose à faire, même si on a des sujets plein la tête.&lt;/li&gt;
  &lt;li&gt;Ça prend du temps, même pour des sujets qu’on maitrise&lt;/li&gt;
  &lt;li&gt;En tant que freelance qui télétravaille, c’est difficile de se détacher de son client pour prendre du temps “pour soi”&lt;/li&gt;
  &lt;li&gt;Je suis un peu fainéant je pense&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;J’étais en train de me poser la question de garder mon blog ou pas, car un blog abandonné, c’est quand même triste.&lt;/p&gt;

&lt;p&gt;Je n’ai donc pas hésité longtemps quand Vincent m’a proposé un petit challenge : écrire un billet par jour pendant 1 mois.&lt;/p&gt;

&lt;p&gt;Nous avons discuté lors du dernier &lt;a href=&quot;http://www.toulousejug.org/2015/03/11/yeoman.html&quot;&gt;Toulouse Jug&lt;/a&gt;, et c’est là qu’il m’a parlé de ce défi qu’il s’était lancé avec un ami.&lt;/p&gt;

&lt;p&gt;J’ai trouvé l’idée vraiment super…le principe derrière l’idée encore plus :&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Le but est de se lancer des défis sur 30 jours pour bousculer les habitudes&lt;/em&gt;&lt;/strong&gt;. Vincent l’explique mieux que moi dans son &lt;a href=&quot;http://vferries.github.io/blog/ignite-talks/&quot;&gt;post du premier avril&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Donc voilà, c’est parti pour un mois de posts, je pense parler de docker, j’ai quelques sujets assez précis dont je voudrais parler, mais pas que.&lt;/p&gt;

&lt;h2 id=&quot;les-challengers&quot;&gt;Les challengers&lt;/h2&gt;

&lt;div class=&quot;video-container&quot;&gt;
  &lt;iframe src=&quot;https://www.youtube.com/embed/TTdm5GtAW0o&quot; frameborder=&quot;0&quot; width=&quot;800&quot; height=&quot;600&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h3 id=&quot;vincent-ferries&quot;&gt;Vincent Ferries&lt;/h3&gt;
&lt;p&gt;Je le croise à tous les événements auxquels je vais, c’est impressionnant il est partout, passionné par le dev, il lance son &lt;a href=&quot;http://vferries.github.io/blog/&quot;&gt;blog&lt;/a&gt; et il en a un deuxième exclusivement sur les &lt;a href=&quot;http://vferries.github.io/voyage/&quot;&gt;voyages&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Je vous conseille d’aller y faire un tour, ça fait rêver.&lt;/p&gt;

&lt;h3 id=&quot;jean-marie&quot;&gt;Jean-Marie&lt;/h3&gt;
&lt;p&gt;Je ne le connais pas personnellement, je fais confiance à Vincent quand il me dit qu’il va parler de JavaScript et de vim.&lt;/p&gt;

&lt;p&gt;Son blog est &lt;a href=&quot;http://randomblog.fr/&quot;&gt;ici&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;ps-&quot;&gt;PS :&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Et ce n’est pas un poisson d’avril&lt;/li&gt;
  &lt;li&gt;J’avais adoré l’initiative similaire de &lt;a href=&quot;http://blog.javabien.net/2014/03/28/one-day-one-post-6-weeks-30-posts/&quot;&gt;David Gageot&lt;/a&gt;, dommage qu’il ait arrêté&lt;/li&gt;
&lt;/ul&gt;

</description>
            <pubDate>Wed, 01 Apr 2015 00:00:00 +0000</pubDate>
            <link>http://agileek.github.io/2015/04/01/one-day-one-post/</link>
            <guid isPermaLink="true">http://agileek.github.io/2015/04/01/one-day-one-post/</guid>
            
            
        </item>
        
        <item>
            <title>Generate log line with Intellij and live templates</title>
            <description>&lt;p&gt;With IntelliJ, one missing feature is the automatic generation of the famous &lt;code&gt;private static Logger LOGGER = ...;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can do it easily with the Live Templates, you just have to go to &lt;strong&gt;&lt;em&gt;Editor -&amp;gt; Live Templates -&amp;gt; others -&amp;gt; create new&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;And in these fields :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Abbreviation: log&lt;/li&gt;
  &lt;li&gt;Description: Add log line&lt;/li&gt;
  &lt;li&gt;Template text:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;slf4j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Logger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOGGER&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;slf4j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LoggerFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;$CLASS_NAME$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Applicable in: Java: declaration&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Edit variables: CLASS_NAME Expresion: className()&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Make sure you have slf4j-api in your classpath, with maven:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.slf4j&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;slf4j-api&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.7.7&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That’s it, type &lt;code&gt;log&lt;/code&gt; and Ctrl+J and it will generate the logger line, with the slf4j imports.&lt;/p&gt;
</description>
            <pubDate>Sun, 01 Mar 2015 00:00:00 +0000</pubDate>
            <link>http://agileek.github.io/intellij/java/2015/03/01/intellij-live-template-log/</link>
            <guid isPermaLink="true">http://agileek.github.io/intellij/java/2015/03/01/intellij-live-template-log/</guid>
            
            
            <category>intellij</category>
            
            <category>java</category>
            
        </item>
        
    </channel>
</rss>
